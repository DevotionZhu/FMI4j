
plugins {
    id 'application'
    id "org.jetbrains.kotlin.jvm" version "1.3.11"
    id "com.github.johnrengelman.shadow" version "4.0.2"
}

println "Gradle version is ${gradle.getGradleVersion()}"

def group = "no.ntnu.ihb.fmi4j.fmudriver"
mainClassName = "${group}.FmuDriver"

def fmi4j_snapshot = true
def fmi4j_version = fmi4j_snapshot ? 'dev-SNAPSHOT' : '0.14.0'

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

if (fmi4j_snapshot) {
    configurations.all {
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    compile group: 'info.picocli', name: 'picocli', version: '3.8.2'
    compile group: 'org.apache.commons', name: 'commons-csv', version: '1.5'

    compile group: 'com.github.NTNU-IHB.FMI4j', name: 'fmi-import', version: fmi4j_version, changing: fmi4j_snapshot
    compile group: 'com.github.NTNU-IHB.FMI4j', name: 'fmi-import-solvers-apache-math3', version: fmi4j_version, changing: fmi4j_snapshot

    def slf4j_version = '1.7.25'
    compile group: 'org.slf4j', name: 'slf4j-api', version: slf4j_version
    runtime group: 'org.slf4j', name: 'slf4j-log4j12', version: slf4j_version

    def junit_version = '5.3.2'
    testCompile("org.junit.jupiter:junit-jupiter-api:$junit_version")
    testCompile("org.junit.jupiter:junit-jupiter-params:$junit_version")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:$junit_version")

}

test {
    useJUnitPlatform()
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

shadowJar {
    baseName = "fmudriver"
    classifier = null
    version = null
}

distributions {
    main {
        baseName = 'fmudriver'
    }
}

startScripts {
    applicationName = 'fmudriver'
}