
plugins {
    id "application"
    id "org.jetbrains.kotlin.jvm" version "1.3.21"
    id "com.github.johnrengelman.shadow" version "4.0.4"
}

println "Gradle version is ${gradle.getGradleVersion()}"

def group = "no.ntnu.ihb.fmu2jar"
mainClassName = "${group}.Fmu2Jar"

def fmi4j_snapshot = false
def fmi4j_version = !fmi4j_snapshot ? '0.15.2' : 'dev-SNAPSHOT'

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

if (fmi4j_snapshot) {
    configurations.all {
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
    }
}

dependencies {

    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    compile group: 'info.picocli', name: 'picocli', version: '3.9.2'
    compile group: 'com.github.NTNU-IHB', name: 'FMI4j', version: fmi4j_version, changing: fmi4j_snapshot

    def slf4j_version = '1.7.25'
    compile group: 'org.slf4j', name: 'slf4j-api', version: slf4j_version
    runtime group: 'org.slf4j', name: 'slf4j-log4j12', version: slf4j_version

    def junit_version = '5.3.2'
    testCompile("org.junit.jupiter:junit-jupiter-api:$junit_version")
    testCompile("org.junit.jupiter:junit-jupiter-params:$junit_version")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:$junit_version")

}

test {
    useJUnitPlatform()
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

shadowJar {
    archiveBaseName = "fmu2jar"
    archiveClassifier = null
    version = null
}

task copyTestFmus(type: Copy) {
    from "$projectDir/../../fmus"
    into "$buildDir/resources/test/fmus"
}

testClasses.dependsOn(copyTestFmus)

task deleteCachedControlledTemperature(type: Delete) {
    def fmuName = "ControlledTemperature"
    def m2 = System.getProperty("user.home") + "/.m2/repository"
    delete "$m2/${group.replace(".", "/")}/$fmuName"
}

clean.dependsOn(deleteCachedControlledTemperature)
