
import org.apache.tools.ant.taskdefs.condition.Os

plugins {
    id "c"
    id "com.github.johnrengelman.shadow" version "2.0.4"
}

apply from: rootProject.file('publisher.gradle')

dependencies {

    api project(':fmi-import-solvers-api')
    api project(':fmi-modeldescription')

    implementation group: 'net.java.dev.jna', name: 'jna', version: '4.5.2'
    implementation group: 'net.java.dev.jna', name: 'jna-platform', version: '4.5.2'

    testImplementation project(':fmi-import-solvers-apache-math3')
    testImplementation group: 'org.siani.javafmi', name: 'fmu-wrapper', version: '2.24.4'

}

shadowJar {
    baseName = archivesBaseName + "-shadow"
    classifier = null
    version = null
}


model {
    components {
        fmi(NativeLibrarySpec) {
            binaries.all {
                cCompiler.args "-I/usr/lib/jvm/java-8-openjdk-amd64/include"
                cCompiler.args "-I/usr/lib/jvm/java-8-openjdk-amd64/include/linux"
            }
        }
    }
}



task generateJNI(type: Exec) {

    if (Os.isFamily(Os.FAMILY_WINDOWS)) {

        commandLine 'cmd', '/c', 'javac'

    } else if (Os.isFamily(Os.FAMILY_UNIX)) {

        commandLine 'javac', "${workingDir}/src/main/java/no/mechatronics/sfi/fmi4j/jni/FmiLibrary.java", "-h", "src/fmi/c"

    } else {

    }

}

generateJNI.dependsOn(compileJava)